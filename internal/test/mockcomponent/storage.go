// Code generated by MockGen. DO NOT EDIT.
// Source: internal/component/storage/contract.go

// Package mockcomponent is a generated GoMock package.
package mockcomponent

import (
	context "context"
	io "io"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// DeleteObject mocks base method.
func (m *MockStorage) DeleteObject(ctx context.Context, object string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteObject", ctx, object)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteObject indicates an expected call of DeleteObject.
func (mr *MockStorageMockRecorder) DeleteObject(ctx, object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObject", reflect.TypeOf((*MockStorage)(nil).DeleteObject), ctx, object)
}

// GenerateDownloadURL mocks base method.
func (m *MockStorage) GenerateDownloadURL(object string) (string, time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateDownloadURL", object)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateDownloadURL indicates an expected call of GenerateDownloadURL.
func (mr *MockStorageMockRecorder) GenerateDownloadURL(object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateDownloadURL", reflect.TypeOf((*MockStorage)(nil).GenerateDownloadURL), object)
}

// GenerateUploadURL mocks base method.
func (m *MockStorage) GenerateUploadURL(object, contentType string) (string, time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateUploadURL", object, contentType)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateUploadURL indicates an expected call of GenerateUploadURL.
func (mr *MockStorageMockRecorder) GenerateUploadURL(object, contentType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateUploadURL", reflect.TypeOf((*MockStorage)(nil).GenerateUploadURL), object, contentType)
}

// GetObjectReader mocks base method.
func (m *MockStorage) GetObjectReader(ctx context.Context, object string) (io.Reader, func(), error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectReader", ctx, object)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(func())
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetObjectReader indicates an expected call of GetObjectReader.
func (mr *MockStorageMockRecorder) GetObjectReader(ctx, object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectReader", reflect.TypeOf((*MockStorage)(nil).GetObjectReader), ctx, object)
}

// GetObjectSize mocks base method.
func (m *MockStorage) GetObjectSize(ctx context.Context, object string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectSize", ctx, object)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetObjectSize indicates an expected call of GetObjectSize.
func (mr *MockStorageMockRecorder) GetObjectSize(ctx, object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectSize", reflect.TypeOf((*MockStorage)(nil).GetObjectSize), ctx, object)
}

// GetObjectWriter mocks base method.
func (m *MockStorage) GetObjectWriter(ctx context.Context, object string) (io.Writer, func()) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectWriter", ctx, object)
	ret0, _ := ret[0].(io.Writer)
	ret1, _ := ret[1].(func())
	return ret0, ret1
}

// GetObjectWriter indicates an expected call of GetObjectWriter.
func (mr *MockStorageMockRecorder) GetObjectWriter(ctx, object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectWriter", reflect.TypeOf((*MockStorage)(nil).GetObjectWriter), ctx, object)
}

// ReadRange mocks base method.
func (m *MockStorage) ReadRange(ctx context.Context, object string, offset int64) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadRange", ctx, object, offset)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadRange indicates an expected call of ReadRange.
func (mr *MockStorageMockRecorder) ReadRange(ctx, object, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadRange", reflect.TypeOf((*MockStorage)(nil).ReadRange), ctx, object, offset)
}
