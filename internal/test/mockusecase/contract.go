// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/contract.go

// Package mockusecase is a generated GoMock package.
package mockusecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	constant "github.com/muhammad-fakhri/archetype-be/internal/constant"
	dto "github.com/muhammad-fakhri/archetype-be/pkg/dto"
)

// MockUsecase is a mock of Usecase interface.
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase.
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance.
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// GetSystemConfig mocks base method.
func (m *MockUsecase) GetSystemConfig(ctx context.Context) (*dto.PublicSystemConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemConfig", ctx)
	ret0, _ := ret[0].(*dto.PublicSystemConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemConfig indicates an expected call of GetSystemConfig.
func (mr *MockUsecaseMockRecorder) GetSystemConfig(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemConfig", reflect.TypeOf((*MockUsecase)(nil).GetSystemConfig), ctx)
}

// UpdateEventExample mocks base method.
func (m *MockUsecase) UpdateEventExample(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEventExample", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateEventExample indicates an expected call of UpdateEventExample.
func (mr *MockUsecaseMockRecorder) UpdateEventExample(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEventExample", reflect.TypeOf((*MockUsecase)(nil).UpdateEventExample), ctx)
}

// UpdateSystemConfig mocks base method.
func (m *MockUsecase) UpdateSystemConfig(ctx context.Context, configs *dto.PublicSystemConfigRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSystemConfig", ctx, configs)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSystemConfig indicates an expected call of UpdateSystemConfig.
func (mr *MockUsecaseMockRecorder) UpdateSystemConfig(ctx, configs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSystemConfig", reflect.TypeOf((*MockUsecase)(nil).UpdateSystemConfig), ctx, configs)
}

// UpdateSystemConfigs mocks base method.
func (m *MockUsecase) UpdateSystemConfigs(ctx context.Context, configMap map[constant.SystemConfig]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSystemConfigs", ctx, configMap)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSystemConfigs indicates an expected call of UpdateSystemConfigs.
func (mr *MockUsecaseMockRecorder) UpdateSystemConfigs(ctx, configMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSystemConfigs", reflect.TypeOf((*MockUsecase)(nil).UpdateSystemConfigs), ctx, configMap)
}
